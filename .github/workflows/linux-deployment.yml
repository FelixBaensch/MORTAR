# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time

name: Gradle JPackage Build for Ubuntu x64

on:
  push:
    branches: [ "main", "production", "issue-142" ] #TODO remove after testing
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        java: [ '21.0.1' ]
      fail-fast: false
    name: ${{ matrix.os }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
      - name: Echo JAVA_HOME
        run: echo $JAVA_HOME
      - name: Verify Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Execute fatJar
        run: ./gradlew --info --stacktrace fatJar
      - name: Execute jpackage
        run: jpackage -i . -n MORTAR --icon Images/MORTAR-icon.icns --main-jar build/libs/MORTAR-fat-1.2.1.0.jar -t deb --app-version 1.2.1 --copyright "Copyright (C) 2024  Felix Baensch, Jonas Schaub; licensed under MIT license" --description "MORTAR - MOlecule fRagmenTAtion fRamework" --java-options "-Xms512m -Xmx4g" --about-url "https://github.com/FelixBaensch/MORTAR"
      - name: Upload DEB as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: MORTAR-1.2.1.deb
          path: ./*.deb
          retention-days: 30
          compression-level: 0 # no compression since it makes no difference
